CC=gcc -g -O2
SRC = $(wildcard *.c)
OBJ = *.o *.obj
CPPFLAGS = -Iinclude
LDFLAGS = -Llib -lm
EEXT=
OEXT=.o
TARGET0 = 1_div_cos
TARGET1 = 1_div_sin
TARGET2 = 3pcircle
TARGET3 = accuracy
TARGET4 = arrays2
TARGET5 = arrays
TARGET6 = bases
TARGET7 = bignum
TARGET8 = blowup
TARGET9 = c2f
TARGET10 = checkprimenoret
TARGET11 = checkprimeret
TARGET12 = checkprimevoid
TARGET13 = conbinatorics
TARGET14 = const
TARGET15 = cosin
TARGET16 = couples
TARGET17 = decodd
TARGET18 = deg2rad
TARGET19 = dices
TARGET20 = doublerow
TARGET21 = doublevec
TARGET22 = e_what
TARGET23 = f2c
TARGET24 = floatformats
TARGET25 = floatlimits
TARGET26 = fpow
TARGET27 = gimme_five
TARGET28 = gimme_numbers
TARGET29 = gravity
TARGET30 = hyperbola
TARGET31 = incodd
TARGET32 = intlimits
TARGET33 = lights2
TARGET34 = limits
TARGET35 = loopbyte
TARGET36 = loopint
TARGET37 = parabola
TARGET38 = parpow
TARGET39 = pi
TARGET40 = pow
TARGET41 = precision
TARGET42 = predecodd
TARGET43 = preincodd
TARGET44 = printval
TARGET45 = printwidth
TARGET46 = random1
TARGET47 = random2
TARGET48 = realarrays
TARGET49 = rndicples
TARGET50 = rndrcples
TARGET51 = shares
TARGET52 = simpshares
TARGET53 = sin
TARGET54 = sizes
TARGET55 = solvequad
TARGET56 = statsn
TARGET57 = sum10
TARGET58 = sum4co
TARGET59 = sumn
TARGET60 = taxes
TARGET61 = test_limits
TARGET62 = toobig
TARGET63 = ugravity
TARGET64 = voidprint5
TARGETS = voidprint5 ugravity toobig test_limits taxes sumn sum4co sum10 statsn solvequad sizes sin simpshares shares rndrcples rndicples realarrays random2 random1 printwidth printval preincodd predecodd precision pow pi parpow parabola loopint loopbyte limits lights2 intlimits incodd hyperbola gravity gimme_numbers gimme_five fpow floatlimits floatformats f2c e_what doublevec doublerow dices deg2rad decodd couples cosin const conbinatorics checkprimevoid checkprimeret checkprimenoret c2f blowup bignum bases arrays arrays2 accuracy 3pcircle 1_div_sin 1_div_cos
all: $(TARGETS)
$(TARGET0).o: 1_div_cos.c
	$(CC) -c   $< -o 1_div_cos.o $(CPPFLAGS)
$(TARGET0): 1_div_cos.o
	$(CC) -o 1_div_cos $< $(LDFLAGS)
$(TARGET1).o: 1_div_sin.c
	$(CC) -c   $< -o 1_div_sin.o $(CPPFLAGS)
$(TARGET1): 1_div_sin.o
	$(CC) -o 1_div_sin $< $(LDFLAGS)
$(TARGET2).o: 3pcircle.c
	$(CC) -c   $< -o 3pcircle.o $(CPPFLAGS)
$(TARGET2): 3pcircle.o
	$(CC) -o 3pcircle $< $(LDFLAGS)
$(TARGET3).o: accuracy.c
	$(CC) -c   $< -o accuracy.o $(CPPFLAGS)
$(TARGET3): accuracy.o
	$(CC) -o accuracy $< $(LDFLAGS)
$(TARGET4).o: arrays2.c
	$(CC) -c   $< -o arrays2.o $(CPPFLAGS)
$(TARGET4): arrays2.o
	$(CC) -o arrays2 $< $(LDFLAGS)
$(TARGET5).o: arrays.c
	$(CC) -c   $< -o arrays.o $(CPPFLAGS)
$(TARGET5): arrays.o
	$(CC) -o arrays $< $(LDFLAGS)
$(TARGET6).o: bases.c
	$(CC) -c   $< -o bases.o $(CPPFLAGS)
$(TARGET6): bases.o
	$(CC) -o bases $< $(LDFLAGS)
$(TARGET7).o: bignum.c
	$(CC) -c   $< -o bignum.o $(CPPFLAGS)
$(TARGET7): bignum.o
	$(CC) -o bignum $< $(LDFLAGS)
$(TARGET8).o: blowup.c
	$(CC) -c   $< -o blowup.o $(CPPFLAGS)
$(TARGET8): blowup.o
	$(CC) -o blowup $< $(LDFLAGS)
$(TARGET9).o: c2f.c
	$(CC) -c   $< -o c2f.o $(CPPFLAGS)
$(TARGET9): c2f.o
	$(CC) -o c2f $< $(LDFLAGS)
$(TARGET10).o: checkprimenoret.c
	$(CC) -c   $< -o checkprimenoret.o $(CPPFLAGS)
$(TARGET10): checkprimenoret.o
	$(CC) -o checkprimenoret $< $(LDFLAGS)
$(TARGET11).o: checkprimeret.c
	$(CC) -c   $< -o checkprimeret.o $(CPPFLAGS)
$(TARGET11): checkprimeret.o
	$(CC) -o checkprimeret $< $(LDFLAGS)
$(TARGET12).o: checkprimevoid.c
	$(CC) -c   $< -o checkprimevoid.o $(CPPFLAGS)
$(TARGET12): checkprimevoid.o
	$(CC) -o checkprimevoid $< $(LDFLAGS)
$(TARGET13).o: conbinatorics.c
	$(CC) -c   $< -o conbinatorics.o $(CPPFLAGS)
$(TARGET13): conbinatorics.o
	$(CC) -o conbinatorics $< $(LDFLAGS)
$(TARGET14).o: const.c
	$(CC) -c   $< -o const.o $(CPPFLAGS)
$(TARGET14): const.o
	$(CC) -o const $< $(LDFLAGS)
$(TARGET15).o: cosin.c
	$(CC) -c   $< -o cosin.o $(CPPFLAGS)
$(TARGET15): cosin.o
	$(CC) -o cosin $< $(LDFLAGS)
$(TARGET16).o: couples.c
	$(CC) -c   $< -o couples.o $(CPPFLAGS)
$(TARGET16): couples.o
	$(CC) -o couples $< $(LDFLAGS)
$(TARGET17).o: decodd.c
	$(CC) -c   $< -o decodd.o $(CPPFLAGS)
$(TARGET17): decodd.o
	$(CC) -o decodd $< $(LDFLAGS)
$(TARGET18).o: deg2rad.c
	$(CC) -c   $< -o deg2rad.o $(CPPFLAGS)
$(TARGET18): deg2rad.o
	$(CC) -o deg2rad $< $(LDFLAGS)
$(TARGET19).o: dices.c
	$(CC) -c   $< -o dices.o $(CPPFLAGS)
$(TARGET19): dices.o
	$(CC) -o dices $< $(LDFLAGS)
$(TARGET20).o: doublerow.c
	$(CC) -c   $< -o doublerow.o $(CPPFLAGS)
$(TARGET20): doublerow.o
	$(CC) -o doublerow $< $(LDFLAGS)
$(TARGET21).o: doublevec.c
	$(CC) -c   $< -o doublevec.o $(CPPFLAGS)
$(TARGET21): doublevec.o
	$(CC) -o doublevec $< $(LDFLAGS)
$(TARGET22).o: e_what.c
	$(CC) -c   $< -o e_what.o $(CPPFLAGS)
$(TARGET22): e_what.o
	$(CC) -o e_what $< $(LDFLAGS)
$(TARGET23).o: f2c.c
	$(CC) -c   $< -o f2c.o $(CPPFLAGS)
$(TARGET23): f2c.o
	$(CC) -o f2c $< $(LDFLAGS)
$(TARGET24).o: floatformats.c
	$(CC) -c   $< -o floatformats.o $(CPPFLAGS)
$(TARGET24): floatformats.o
	$(CC) -o floatformats $< $(LDFLAGS)
$(TARGET25).o: floatlimits.c
	$(CC) -c   $< -o floatlimits.o $(CPPFLAGS)
$(TARGET25): floatlimits.o
	$(CC) -o floatlimits $< $(LDFLAGS)
$(TARGET26).o: fpow.c
	$(CC) -c   $< -o fpow.o $(CPPFLAGS)
$(TARGET26): fpow.o
	$(CC) -o fpow $< $(LDFLAGS)
$(TARGET27).o: gimme_five.c
	$(CC) -c   $< -o gimme_five.o $(CPPFLAGS)
$(TARGET27): gimme_five.o
	$(CC) -o gimme_five $< $(LDFLAGS)
$(TARGET28).o: gimme_numbers.c
	$(CC) -c   $< -o gimme_numbers.o $(CPPFLAGS)
$(TARGET28): gimme_numbers.o
	$(CC) -o gimme_numbers $< $(LDFLAGS)
$(TARGET29).o: gravity.c
	$(CC) -c   $< -o gravity.o $(CPPFLAGS)
$(TARGET29): gravity.o
	$(CC) -o gravity $< $(LDFLAGS)
$(TARGET30).o: hyperbola.c
	$(CC) -c   $< -o hyperbola.o $(CPPFLAGS)
$(TARGET30): hyperbola.o
	$(CC) -o hyperbola $< $(LDFLAGS)
$(TARGET31).o: incodd.c
	$(CC) -c   $< -o incodd.o $(CPPFLAGS)
$(TARGET31): incodd.o
	$(CC) -o incodd $< $(LDFLAGS)
$(TARGET32).o: intlimits.c
	$(CC) -c   $< -o intlimits.o $(CPPFLAGS)
$(TARGET32): intlimits.o
	$(CC) -o intlimits $< $(LDFLAGS)
$(TARGET33).o: lights2.c
	$(CC) -c   $< -o lights2.o $(CPPFLAGS)
$(TARGET33): lights2.o
	$(CC) -o lights2 $< $(LDFLAGS)
$(TARGET34).o: limits.c
	$(CC) -c   $< -o limits.o $(CPPFLAGS)
$(TARGET34): limits.o
	$(CC) -o limits $< $(LDFLAGS)
$(TARGET35).o: loopbyte.c
	$(CC) -c   $< -o loopbyte.o $(CPPFLAGS)
$(TARGET35): loopbyte.o
	$(CC) -o loopbyte $< $(LDFLAGS)
$(TARGET36).o: loopint.c
	$(CC) -c   $< -o loopint.o $(CPPFLAGS)
$(TARGET36): loopint.o
	$(CC) -o loopint $< $(LDFLAGS)
$(TARGET37).o: parabola.c
	$(CC) -c   $< -o parabola.o $(CPPFLAGS)
$(TARGET37): parabola.o
	$(CC) -o parabola $< $(LDFLAGS)
$(TARGET38).o: parpow.c
	$(CC) -c   $< -o parpow.o $(CPPFLAGS)
$(TARGET38): parpow.o
	$(CC) -o parpow $< $(LDFLAGS)
$(TARGET39).o: pi.c
	$(CC) -c   $< -o pi.o $(CPPFLAGS)
$(TARGET39): pi.o
	$(CC) -o pi $< $(LDFLAGS)
$(TARGET40).o: pow.c
	$(CC) -c   $< -o pow.o $(CPPFLAGS)
$(TARGET40): pow.o
	$(CC) -o pow $< $(LDFLAGS)
$(TARGET41).o: precision.c
	$(CC) -c   $< -o precision.o $(CPPFLAGS)
$(TARGET41): precision.o
	$(CC) -o precision $< $(LDFLAGS)
$(TARGET42).o: predecodd.c
	$(CC) -c   $< -o predecodd.o $(CPPFLAGS)
$(TARGET42): predecodd.o
	$(CC) -o predecodd $< $(LDFLAGS)
$(TARGET43).o: preincodd.c
	$(CC) -c   $< -o preincodd.o $(CPPFLAGS)
$(TARGET43): preincodd.o
	$(CC) -o preincodd $< $(LDFLAGS)
$(TARGET44).o: printval.c
	$(CC) -c   $< -o printval.o $(CPPFLAGS)
$(TARGET44): printval.o
	$(CC) -o printval $< $(LDFLAGS)
$(TARGET45).o: printwidth.c
	$(CC) -c   $< -o printwidth.o $(CPPFLAGS)
$(TARGET45): printwidth.o
	$(CC) -o printwidth $< $(LDFLAGS)
$(TARGET46).o: random1.c
	$(CC) -c   $< -o random1.o $(CPPFLAGS)
$(TARGET46): random1.o
	$(CC) -o random1 $< $(LDFLAGS)
$(TARGET47).o: random2.c
	$(CC) -c   $< -o random2.o $(CPPFLAGS)
$(TARGET47): random2.o
	$(CC) -o random2 $< $(LDFLAGS)
$(TARGET48).o: realarrays.c
	$(CC) -c   $< -o realarrays.o $(CPPFLAGS)
$(TARGET48): realarrays.o
	$(CC) -o realarrays $< $(LDFLAGS)
$(TARGET49).o: rndicples.c
	$(CC) -c   $< -o rndicples.o $(CPPFLAGS)
$(TARGET49): rndicples.o
	$(CC) -o rndicples $< $(LDFLAGS)
$(TARGET50).o: rndrcples.c
	$(CC) -c   $< -o rndrcples.o $(CPPFLAGS)
$(TARGET50): rndrcples.o
	$(CC) -o rndrcples $< $(LDFLAGS)
$(TARGET51).o: shares.c
	$(CC) -c   $< -o shares.o $(CPPFLAGS)
$(TARGET51): shares.o
	$(CC) -o shares $< $(LDFLAGS)
$(TARGET52).o: simpshares.c
	$(CC) -c   $< -o simpshares.o $(CPPFLAGS)
$(TARGET52): simpshares.o
	$(CC) -o simpshares $< $(LDFLAGS)
$(TARGET53).o: sin.c
	$(CC) -c   $< -o sin.o $(CPPFLAGS)
$(TARGET53): sin.o
	$(CC) -o sin $< $(LDFLAGS)
$(TARGET54).o: sizes.c
	$(CC) -c   $< -o sizes.o $(CPPFLAGS)
$(TARGET54): sizes.o
	$(CC) -o sizes $< $(LDFLAGS)
$(TARGET55).o: solvequad.c
	$(CC) -c   $< -o solvequad.o $(CPPFLAGS)
$(TARGET55): solvequad.o
	$(CC) -o solvequad $< $(LDFLAGS)
$(TARGET56).o: statsn.c
	$(CC) -c   $< -o statsn.o $(CPPFLAGS)
$(TARGET56): statsn.o
	$(CC) -o statsn $< $(LDFLAGS)
$(TARGET57).o: sum10.c
	$(CC) -c   $< -o sum10.o $(CPPFLAGS)
$(TARGET57): sum10.o
	$(CC) -o sum10 $< $(LDFLAGS)
$(TARGET58).o: sum4co.c
	$(CC) -c   $< -o sum4co.o $(CPPFLAGS)
$(TARGET58): sum4co.o
	$(CC) -o sum4co $< $(LDFLAGS)
$(TARGET59).o: sumn.c
	$(CC) -c   $< -o sumn.o $(CPPFLAGS)
$(TARGET59): sumn.o
	$(CC) -o sumn $< $(LDFLAGS)
$(TARGET60).o: taxes.c
	$(CC) -c   $< -o taxes.o $(CPPFLAGS)
$(TARGET60): taxes.o
	$(CC) -o taxes $< $(LDFLAGS)
$(TARGET61).o: test_limits.c
	$(CC) -c   $< -o test_limits.o $(CPPFLAGS)
$(TARGET61): test_limits.o
	$(CC) -o test_limits $< $(LDFLAGS)
$(TARGET62).o: toobig.c
	$(CC) -c   $< -o toobig.o $(CPPFLAGS)
$(TARGET62): toobig.o
	$(CC) -o toobig $< $(LDFLAGS)
$(TARGET63).o: ugravity.c
	$(CC) -c   $< -o ugravity.o $(CPPFLAGS)
$(TARGET63): ugravity.o
	$(CC) -o ugravity $< $(LDFLAGS)
$(TARGET64).o: voidprint5.c
	$(CC) -c   $< -o voidprint5.o $(CPPFLAGS)
$(TARGET64): voidprint5.o
	$(CC) -o voidprint5 $< $(LDFLAGS)
install: all
	mv $(TARGETS) bin
.PHONY: clean
clean:
	rm -f $(OBJ) $(TARGETS) *.log
distclean: clean
	rm -f bin/* Makefile*
